<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smilcool.server.core.dao.RuleMapMapper">
    <resultMap id="BaseResultMap" type="com.smilcool.server.core.pojo.po.RuleMap">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="authc" jdbcType="BIT" property="authc"/>
        <result column="use_roles" jdbcType="BIT" property="useRoles"/>
        <result column="roles" jdbcType="VARCHAR" property="roles"/>
        <result column="use_perms" jdbcType="BIT" property="usePerms"/>
        <result column="perms" jdbcType="VARCHAR" property="perms"/>
        <result column="use_rest" jdbcType="BIT" property="useRest"/>
        <result column="rest" jdbcType="VARCHAR" property="rest"/>
        <result column="seq" jdbcType="INTEGER" property="seq"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, url, description, type, authc, use_roles, roles, use_perms, perms, use_rest,
    rest, seq, state, remark, create_time, update_time, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from rule_map
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE
        FROM rule_map
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smilcool.server.core.pojo.po.RuleMap">
        INSERT INTO rule_map (id, url, description,
                              type, authc, use_roles, roles,
                              use_perms, perms, use_rest, rest,
                              seq, state, remark,
                              create_time, update_time, deleted)
        VALUES (#{id,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{type,jdbcType=INTEGER}, #{authc,jdbcType=BIT}, #{useRoles,jdbcType=BIT}, #{roles,jdbcType=VARCHAR},
                #{usePerms,jdbcType=BIT}, #{perms,jdbcType=VARCHAR}, #{useRest,jdbcType=BIT}, #{rest,jdbcType=VARCHAR},
                #{seq,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.smilcool.server.core.pojo.po.RuleMap"
    useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into rule_map
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="authc != null">
                authc,
            </if>
            <if test="useRoles != null">
                use_roles,
            </if>
            <if test="roles != null">
                roles,
            </if>
            <if test="usePerms != null">
                use_perms,
            </if>
            <if test="perms != null">
                perms,
            </if>
            <if test="useRest != null">
                use_rest,
            </if>
            <if test="rest != null">
                rest,
            </if>
            <if test="seq != null">
                seq,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="authc != null">
                #{authc,jdbcType=BIT},
            </if>
            <if test="useRoles != null">
                #{useRoles,jdbcType=BIT},
            </if>
            <if test="roles != null">
                #{roles,jdbcType=VARCHAR},
            </if>
            <if test="usePerms != null">
                #{usePerms,jdbcType=BIT},
            </if>
            <if test="perms != null">
                #{perms,jdbcType=VARCHAR},
            </if>
            <if test="useRest != null">
                #{useRest,jdbcType=BIT},
            </if>
            <if test="rest != null">
                #{rest,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                #{seq,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smilcool.server.core.pojo.po.RuleMap">
        update rule_map
        <set>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="authc != null">
                authc = #{authc,jdbcType=BIT},
            </if>
            <if test="useRoles != null">
                use_roles = #{useRoles,jdbcType=BIT},
            </if>
            <if test="roles != null">
                roles = #{roles,jdbcType=VARCHAR},
            </if>
            <if test="usePerms != null">
                use_perms = #{usePerms,jdbcType=BIT},
            </if>
            <if test="perms != null">
                perms = #{perms,jdbcType=VARCHAR},
            </if>
            <if test="useRest != null">
                use_rest = #{useRest,jdbcType=BIT},
            </if>
            <if test="rest != null">
                rest = #{rest,jdbcType=VARCHAR},
            </if>
            <if test="seq != null">
                seq = #{seq,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smilcool.server.core.pojo.po.RuleMap">
        UPDATE rule_map
        SET url         = #{url,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            type        = #{type,jdbcType=INTEGER},
            authc       = #{authc,jdbcType=BIT},
            use_roles   = #{useRoles,jdbcType=BIT},
            roles       = #{roles,jdbcType=VARCHAR},
            use_perms   = #{usePerms,jdbcType=BIT},
            perms       = #{perms,jdbcType=VARCHAR},
            use_rest    = #{useRest,jdbcType=BIT},
            rest        = #{rest,jdbcType=VARCHAR},
            seq         = #{seq,jdbcType=INTEGER},
            state       = #{state,jdbcType=INTEGER},
            remark      = #{remark,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            deleted     = #{deleted,jdbcType=BIT}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="select" resultType="com.smilcool.server.core.pojo.po.RuleMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM rule_map
        ORDER BY seq ASC
    </select>

    <select id="selectByUrl" resultType="com.smilcool.server.core.pojo.po.RuleMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM rule_map
        WHERE url = #{url}
    </select>

</mapper>