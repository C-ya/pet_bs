<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smilcool.server.core.dao.FileMapper">
    <resultMap id="BaseResultMap" type="com.smilcool.server.core.pojo.po.File">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="resource_id" jdbcType="INTEGER" property="resourceId"/>
        <result column="file_category" jdbcType="VARCHAR" property="fileCategory"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="size" jdbcType="VARCHAR" property="size"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="download_count" jdbcType="INTEGER" property="downloadCount"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, resource_id, file_category, title, description, name, size, url, download_count,
    remark, create_time, update_time, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from file
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE
        FROM file
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smilcool.server.core.pojo.po.File">
        INSERT INTO file (id, user_id, resource_id,
                          file_category, title, description,
                          name, size, url, download_count,
                          remark, create_time, update_time,
                          deleted)
        VALUES (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER},
                #{fileCategory,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{name,jdbcType=VARCHAR}, #{size,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
                #{downloadCount,jdbcType=INTEGER},
                #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{deleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.smilcool.server.core.pojo.po.File"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
            <if test="fileCategory != null">
                file_category,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="downloadCount != null">
                download_count,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                #{resourceId,jdbcType=INTEGER},
            </if>
            <if test="fileCategory != null">
                #{fileCategory,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                #{size,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="downloadCount != null">
                #{downloadCount,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smilcool.server.core.pojo.po.File">
        update file
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId,jdbcType=INTEGER},
            </if>
            <if test="fileCategory != null">
                file_category = #{fileCategory,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="downloadCount != null">
                download_count = #{downloadCount,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smilcool.server.core.pojo.po.File">
        UPDATE file
        SET user_id        = #{userId,jdbcType=INTEGER},
            resource_id    = #{resourceId,jdbcType=INTEGER},
            file_category  = #{fileCategory,jdbcType=VARCHAR},
            title          = #{title,jdbcType=VARCHAR},
            description    = #{description,jdbcType=VARCHAR},
            name           = #{name,jdbcType=VARCHAR},
            size           = #{size,jdbcType=VARCHAR},
            url            = #{url,jdbcType=VARCHAR},
            download_count = #{downloadCount,jdbcType=INTEGER},
            remark         = #{remark,jdbcType=VARCHAR},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            deleted        = #{deleted,jdbcType=BIT}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 以下是自定义内容 -->

    <resultMap extends="BaseResultMap" id="ResultMapWithUserAndResource"
               type="com.smilcool.server.core.pojo.vo.FileVO">
        <!-- 发布用户信息 -->
        <association property="user" javaType="com.smilcool.server.core.pojo.vo.UserVO">
            <id column="user_id" jdbcType="INTEGER" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
            <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
            <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
            <result column="sign" jdbcType="VARCHAR" property="sign"/>
        </association>
        <!-- 资源信息 -->
        <association property="resource" javaType="com.smilcool.server.core.pojo.vo.ResourceVO">
            <id column="resource_id" jdbcType="INTEGER" property="id"/>
            <result column="zan_count" jdbcType="INTEGER" property="zanCount"/>
            <result column="pv_count" jdbcType="INTEGER" property="pvCount"/>
            <result column="comment_count" jdbcType="INTEGER" property="commentCount"/>
        </association>
    </resultMap>

    <sql id="File_Column_List">
        file.id, file_category, title, description, name, size, url, download_count, file.create_time
    </sql>
    <sql id="User_Column_List">
        user.id as user_id, username, nickname, avatar, sign
    </sql>
    <sql id="Resource_Column_List">
        resource.id as resource_id, zan_count, pv_count, comment_count
    </sql>

    <select id="selectFileVOByPrimaryKey" resultMap="ResultMapWithUserAndResource">
        SELECT
        <include refid="File_Column_List"/>,
        <include refid="User_Column_List"/>,
        <include refid="Resource_Column_List"/>
        FROM file
        LEFT JOIN user ON file.user_id = user.id
        LEFT JOIN resource ON file.resource_id = resource.id
        where file.id = #{id}
    </select>

    <select id="selectFileVOByQueryForm" resultMap="ResultMapWithUserAndResource">
        SELECT
        <include refid="File_Column_List"/>,
        <include refid="User_Column_List"/>,
        <include refid="Resource_Column_List"/>
        FROM file
        LEFT JOIN user ON file.user_id = user.id
        LEFT JOIN resource ON file.resource_id = resource.id
        <where>
            <if test="form.userId != null">
                file.user_id = #{form.userId}
            </if>
            <if test="form.fileCategory != null">
                AND file.file_category = #{form.fileCategory}
            </if>
            <if test="form.general != null">
                AND (file.title LIKE CONCAT("%",#{form.general},"%")
                OR file.description LIKE CONCAT("%",#{form.general},"%")
                OR file.name LIKE CONCAT("%",#{form.general},"%"))
            </if>
        </where>
    </select>
</mapper>