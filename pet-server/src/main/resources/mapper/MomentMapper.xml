<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smilcool.server.core.dao.MomentMapper">
    <resultMap id="BaseResultMap" type="com.smilcool.server.core.pojo.po.Moment">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="resource_id" jdbcType="INTEGER" property="resourceId"/>
        <result column="moment_category" jdbcType="VARCHAR" property="momentCategory"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.smilcool.server.core.pojo.po.Moment">
        <result column="images" jdbcType="LONGVARCHAR" property="images"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, resource_id, moment_category, content, remark, create_time, update_time,
    deleted
    </sql>
    <sql id="Blob_Column_List">
        images
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from moment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE
        FROM moment
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smilcool.server.core.pojo.po.Moment">
        INSERT INTO moment (id, user_id, resource_id,
                            moment_category, content, remark,
                            create_time, update_time, deleted,
                            images)
        VALUES (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER},
                #{momentCategory,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT},
                #{images,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.smilcool.server.core.pojo.po.Moment"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into moment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
            <if test="momentCategory != null">
                moment_category,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="images != null">
                images,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                #{resourceId,jdbcType=INTEGER},
            </if>
            <if test="momentCategory != null">
                #{momentCategory,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
            <if test="images != null">
                #{images,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smilcool.server.core.pojo.po.Moment">
        update moment
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId,jdbcType=INTEGER},
            </if>
            <if test="momentCategory != null">
                moment_category = #{momentCategory,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="images != null">
                images = #{images,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.smilcool.server.core.pojo.po.Moment">
        UPDATE moment
        SET user_id         = #{userId,jdbcType=INTEGER},
            resource_id     = #{resourceId,jdbcType=INTEGER},
            moment_category = #{momentCategory,jdbcType=VARCHAR},
            content         = #{content,jdbcType=VARCHAR},
            remark          = #{remark,jdbcType=VARCHAR},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            update_time     = #{updateTime,jdbcType=TIMESTAMP},
            deleted         = #{deleted,jdbcType=BIT},
            images          = #{images,jdbcType=LONGVARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smilcool.server.core.pojo.po.Moment">
        UPDATE moment
        SET user_id         = #{userId,jdbcType=INTEGER},
            resource_id     = #{resourceId,jdbcType=INTEGER},
            moment_category = #{momentCategory,jdbcType=VARCHAR},
            content         = #{content,jdbcType=VARCHAR},
            remark          = #{remark,jdbcType=VARCHAR},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            update_time     = #{updateTime,jdbcType=TIMESTAMP},
            deleted         = #{deleted,jdbcType=BIT}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 以下是自定义内容 -->

    <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithUserAndResource"
               type="com.smilcool.server.core.pojo.vo.MomentVO">
        <!-- 发布用户信息 -->
        <association property="user" javaType="com.smilcool.server.core.pojo.vo.UserVO">
            <id column="user_id" jdbcType="INTEGER" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
            <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
            <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
            <result column="sign" jdbcType="VARCHAR" property="sign"/>
        </association>
        <!-- 资源信息 -->
        <association property="resource" javaType="com.smilcool.server.core.pojo.vo.ResourceVO">
            <id column="resource_id" jdbcType="INTEGER" property="id"/>
            <result column="zan_count" jdbcType="INTEGER" property="zanCount"/>
            <result column="pv_count" jdbcType="INTEGER" property="pvCount"/>
            <result column="comment_count" jdbcType="INTEGER" property="commentCount"/>
        </association>
    </resultMap>

    <sql id="Moment_Column_List">
        moment.id, moment_category, content, images, moment.create_time
    </sql>
    <sql id="User_Column_List">
        user.id as user_id, username, nickname, avatar, sign
    </sql>
    <sql id="Resource_Column_List">
        resource.id as resource_id, zan_count, pv_count, comment_count
    </sql>

    <select id="selectMomentVOByQueryForm" resultMap="ResultMapWithUserAndResource">
        SELECT
        <include refid="Moment_Column_List"/>,
        <include refid="User_Column_List"/>,
        <include refid="Resource_Column_List"/>
        FROM moment
        LEFT JOIN user ON moment.user_id = user.id
        LEFT JOIN resource ON moment.resource_id = resource.id
        <where>
            <if test="form.userId != null">
                AND moment.user_id = #{form.userId}
            </if>
            <if test="form.petId != null">
                AND moment.remark = #{form.petId}
            </if>
            <if test="form.momentCategory != null">
                AND moment.moment_category = #{form.momentCategory}
            </if>
            <if test="form.general != null">
                AND moment.content LIKE CONCAT("%",#{form.general},"%")
            </if>
        </where>
    </select>
</mapper>