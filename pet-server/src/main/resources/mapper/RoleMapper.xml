<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smilcool.server.core.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.smilcool.server.core.pojo.po.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="initial" jdbcType="BIT" property="initial"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="fixed" jdbcType="BIT" property="fixed"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, description, initial, state, fixed, remark, create_time, update_time, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE
        FROM role
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smilcool.server.core.pojo.po.Role">
        INSERT INTO role (id, name, description,
                          initial, state, fixed, remark,
                          create_time, update_time, deleted)
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{initial,jdbcType=BIT}, #{state,jdbcType=INTEGER}, #{fixed,jdbcType=BIT}, #{remark,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.smilcool.server.core.pojo.po.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="initial != null">
                initial,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="fixed != null">
                fixed,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="initial != null">
                #{initial,jdbcType=BIT},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="fixed != null">
                #{fixed,jdbcType=BIT},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smilcool.server.core.pojo.po.Role">
        update role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="initial != null">
                initial = #{initial,jdbcType=BIT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="fixed != null">
                fixed = #{fixed,jdbcType=BIT},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smilcool.server.core.pojo.po.Role">
        UPDATE role
        SET name        = #{name,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            initial     = #{initial,jdbcType=BIT},
            state       = #{state,jdbcType=INTEGER},
            fixed       = #{fixed,jdbcType=BIT},
            remark      = #{remark,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            deleted     = #{deleted,jdbcType=BIT}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 以下为自定义内容 -->

    <select id="selectInitialRole" resultType="com.smilcool.server.core.pojo.po.Role">
        SELECT
        <include refid="Base_Column_List"/>
        FROM role
        WHERE initial = TRUE
    </select>

    <select id="selectByName" resultType="com.smilcool.server.core.pojo.po.Role">
        select
        <include refid="Base_Column_List"/>
        from role
        where name = #{name}
    </select>

    <resultMap id="ResultMapWithPermissionId" extends="BaseResultMap" type="com.smilcool.server.core.pojo.vo.RoleVO">
        <collection property="permissionIdList" ofType="integer">
            <id column="permission_id"/>
        </collection>
    </resultMap>

    <sql id="Role_Column_List">
        r.id, name, description, initial, r.state, fixed, r.remark, r.create_time, r.update_time
    </sql>

    <select id="selectRoleVO" resultMap="ResultMapWithPermissionId">
        select
        <include refid="Role_Column_List"/>, rp.permission_id
        from role r
        left join role_permission rp
        on r.id = rp.role_id
    </select>
</mapper>