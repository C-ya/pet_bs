<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smilcool.server.core.dao.FriendMapper">
    <resultMap id="BaseResultMap" type="com.smilcool.server.core.pojo.po.Friend">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="friend_user_id" jdbcType="INTEGER" property="friendUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, friend_user_id, create_time, deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from friend
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE
        FROM friend
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smilcool.server.core.pojo.po.Friend">
        INSERT INTO friend (id, user_id, friend_user_id,
                            create_time, deleted)
        VALUES (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{friendUserId,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.smilcool.server.core.pojo.po.Friend">
        insert into friend
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="friendUserId != null">
                friend_user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendUserId != null">
                #{friendUserId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smilcool.server.core.pojo.po.Friend">
        update friend
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="friendUserId != null">
                friend_user_id = #{friendUserId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smilcool.server.core.pojo.po.Friend">
        UPDATE friend
        SET user_id        = #{userId,jdbcType=INTEGER},
            friend_user_id = #{friendUserId,jdbcType=INTEGER},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            deleted        = #{deleted,jdbcType=BIT}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <sql id="User_Base_Column_List">
        u.id, u.username, u.nickname, u.avatar
    </sql>
    <select id="selectWithUserByUserId" resultType="com.smilcool.server.core.pojo.po.User">
        SELECT
        <include refid="User_Base_Column_List"/>
        FROM friend f
        LEFT JOIN user u ON f.friend_user_id = u.id
        WHERE f.user_id = #{currentUserId}
    </select>

    <select id="selectByUserIdWithFriendUserId" resultType="com.smilcool.server.core.pojo.po.Friend">
        SELECT
        <include refid="Base_Column_List"/>
        FROM friend
        WHERE user_id = #{userId}
        AND friend_user_id = #{friendUserId}
    </select>
</mapper>