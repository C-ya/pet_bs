<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smilcool.server.core.dao.LostFoundMapper">
    <resultMap id="BaseResultMap" type="com.smilcool.server.core.pojo.po.LostFound">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="resource_id" jdbcType="INTEGER" property="resourceId"/>
        <result column="lost_found_category" jdbcType="VARCHAR" property="lostFoundCategory"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="item_name" jdbcType="VARCHAR" property="itemName"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.smilcool.server.core.pojo.po.LostFound">
        <result column="images" jdbcType="LONGVARCHAR" property="images"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, user_id, resource_id, lost_found_category, title, description, item_name, time,
    address, remark, create_time, update_time, deleted
    </sql>
    <sql id="Blob_Column_List">
        images
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from lost_found
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE
        FROM lost_found
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.smilcool.server.core.pojo.po.LostFound">
        INSERT INTO lost_found (id, user_id, resource_id,
                                lost_found_category, title, description,
                                item_name, time, address,
                                remark, create_time, update_time,
                                deleted, images)
        VALUES (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{resourceId,jdbcType=INTEGER},
                #{lostFoundCategory,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
                #{itemName,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR},
                #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{deleted,jdbcType=BIT}, #{images,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.smilcool.server.core.pojo.po.LostFound"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into lost_found
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="resourceId != null">
                resource_id,
            </if>
            <if test="lostFoundCategory != null">
                lost_found_category,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="itemName != null">
                item_name,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="images != null">
                images,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                #{resourceId,jdbcType=INTEGER},
            </if>
            <if test="lostFoundCategory != null">
                #{lostFoundCategory,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="itemName != null">
                #{itemName,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
            <if test="images != null">
                #{images,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smilcool.server.core.pojo.po.LostFound">
        update lost_found
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="resourceId != null">
                resource_id = #{resourceId,jdbcType=INTEGER},
            </if>
            <if test="lostFoundCategory != null">
                lost_found_category = #{lostFoundCategory,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="itemName != null">
                item_name = #{itemName,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="images != null">
                images = #{images,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.smilcool.server.core.pojo.po.LostFound">
        UPDATE lost_found
        SET user_id             = #{userId,jdbcType=INTEGER},
            resource_id         = #{resourceId,jdbcType=INTEGER},
            lost_found_category = #{lostFoundCategory,jdbcType=VARCHAR},
            title               = #{title,jdbcType=VARCHAR},
            description         = #{description,jdbcType=VARCHAR},
            item_name           = #{itemName,jdbcType=VARCHAR},
            time                = #{time,jdbcType=TIMESTAMP},
            address             = #{address,jdbcType=VARCHAR},
            remark              = #{remark,jdbcType=VARCHAR},
            create_time         = #{createTime,jdbcType=TIMESTAMP},
            update_time         = #{updateTime,jdbcType=TIMESTAMP},
            deleted             = #{deleted,jdbcType=BIT},
            images              = #{images,jdbcType=LONGVARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smilcool.server.core.pojo.po.LostFound">
        UPDATE lost_found
        SET user_id             = #{userId,jdbcType=INTEGER},
            resource_id         = #{resourceId,jdbcType=INTEGER},
            lost_found_category = #{lostFoundCategory,jdbcType=VARCHAR},
            title               = #{title,jdbcType=VARCHAR},
            description         = #{description,jdbcType=VARCHAR},
            item_name           = #{itemName,jdbcType=VARCHAR},
            time                = #{time,jdbcType=TIMESTAMP},
            address             = #{address,jdbcType=VARCHAR},
            remark              = #{remark,jdbcType=VARCHAR},
            create_time         = #{createTime,jdbcType=TIMESTAMP},
            update_time         = #{updateTime,jdbcType=TIMESTAMP},
            deleted             = #{deleted,jdbcType=BIT}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 以下是自定义内容 -->

    <resultMap id="ResultMapWithUserAndResource" extends="ResultMapWithBLOBs"
               type="com.smilcool.server.core.pojo.vo.LostFoundVO">
        <!-- 发布用户信息 -->
        <association property="user" javaType="com.smilcool.server.core.pojo.vo.UserVO">
            <id column="user_id" jdbcType="INTEGER" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
            <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
            <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
            <result column="sign" jdbcType="VARCHAR" property="sign"/>
        </association>
        <!-- 资源信息 -->
        <association property="resource" javaType="com.smilcool.server.core.pojo.vo.ResourceVO">
            <id column="resource_id" jdbcType="INTEGER" property="id"/>
            <result column="zan_count" jdbcType="INTEGER" property="zanCount"/>
            <result column="pv_count" jdbcType="INTEGER" property="pvCount"/>
            <result column="comment_count" jdbcType="INTEGER" property="commentCount"/>
        </association>
    </resultMap>

    <sql id="Lost_Found_Column_List">
        lost_found.id, lost_found_category, title, description, item_name, time, address, images, lost_found.create_time
    </sql>
    <sql id="User_Column_List">
        user.id as user_id, username, nickname, avatar, sign
    </sql>
    <sql id="Resource_Column_List">
        resource.id as resource_id, zan_count, pv_count, comment_count
    </sql>

    <select id="selectLostFoundVOByQueryForm" resultMap="ResultMapWithUserAndResource">
        SELECT
        <include refid="Lost_Found_Column_List"/>,
        <include refid="User_Column_List"/>,
        <include refid="Resource_Column_List"/>
        FROM lost_found
        LEFT JOIN user ON lost_found.user_id = user.id
        LEFT JOIN resource ON lost_found.resource_id = resource.id
        <where>
            <if test="form.userId != null">
                AND lost_found.user_id = #{form.userId}
            </if>
            <if test="form.lostFoundCategory != null">
                AND lost_found.lost_found_category = #{form.lostFoundCategory}
            </if>
            <if test="form.general != null">
                AND (lost_found.title LIKE CONCAT("%",#{form.general},"%")
                OR lost_found.description LIKE CONCAT("%",#{form.general},"%")
                OR lost_found.item_name LIKE CONCAT("%",#{form.general},"%")
                OR lost_found.address LIKE CONCAT("%",#{form.general},"%"))
            </if>
        </where>
    </select>

    <select id="selectLostFoundVOByPrimaryKey" resultMap="ResultMapWithUserAndResource">
        SELECT
        <include refid="Lost_Found_Column_List"/>,
        <include refid="User_Column_List"/>,
        <include refid="Resource_Column_List"/>
        FROM lost_found
        LEFT JOIN user ON lost_found.user_id = user.id
        LEFT JOIN resource ON lost_found.resource_id = resource.id
        WHERE lost_found.id = #{id}
    </select>
</mapper>